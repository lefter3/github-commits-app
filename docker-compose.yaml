services:
  app_be:
    container_name: app_be
    build:
      context: .
      dockerfile: Dockerfile.server
    depends_on:
      app_db:
        condition: service_healthy
      app_redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    # env_file:
    #   - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: app_db
      DB_PORT: 5432
      REDIS_HOST: app_redis
      REDIS_PORT: 6333
      JWT_SECRET: ${JWT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
    networks:
      - app_network

  # Postgres service
  app_db:
    container_name: app_db
    image: postgres:15.4-alpine3.18
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  # Redis service
  app_redis:
    container_name: app_redis
    image: redis:7.2-alpine3.18
    ports:
      - "6333:6379"
    command: ["redis-server"]
    networks:
      - app_network
    mem_limit: 100m
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10

networks:
  app_network:
    driver: bridge